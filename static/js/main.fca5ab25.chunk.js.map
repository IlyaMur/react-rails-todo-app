{"version":3,"sources":["components/TodoItem.jsx","components/TodoTab.jsx","components/TodoForm.jsx","services/todoService.js","components/TodoList.jsx","App.js","index.js"],"names":["Todo","todo","onTodoRemoval","onTodoToggle","Item","actions","title","completed","checkedChildren","CheckOutlined","unCheckedChildren","CloseOutlined","onChange","defaultChecked","onConfirm","className","type","danger","color","id","Todotab","todos","locale","emptyText","dataSource","renderItem","TodoItem","pagination","position","pageSize","TodoForm","onFormSubmit","Form","useForm","form","onFinish","getFieldValue","console","log","getFieldsValue","resetFields","layout","gutter","xs","sm","md","lg","xl","name","rules","required","message","placeholder","htmlType","block","PlusCircleFilled","baseUrl","loadTodos","fetch","then","res","json","TabPane","Tabs","Content","Layout","TodoList","useState","refreshing","setRefreshing","setTodos","activeTodos","setActiveTodos","completedTodos","setCompletedTodos","handleRemoveTodo","method","onRefresh","warn","handeToggleStatus","headers","body","JSON","stringify","updateTodo","info","useCallback","a","data","filter","useEffect","style","padding","span","offset","createTodo","success","defaultActiveKey","tab","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qZA+CeA,EA3CF,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,cAAeC,EAAmB,EAAnBA,aACnC,OACE,cAAC,IAAKC,KAAN,CACEC,QAAS,CACP,cAAC,IAAD,CACEC,MACEL,EAAKM,UACD,qJACA,yIAJR,SAOE,cAAC,IAAD,CACEC,gBAAiB,cAACC,EAAA,EAAD,IACjBC,kBAAmB,cAACC,EAAA,EAAD,IACnBC,SAAU,WACRT,EAAaF,IAEfY,eAAgBZ,EAAKM,cAGzB,cAAC,IAAD,CACED,MAAO,+HACPQ,UAAW,WACTZ,EAAcD,IAHlB,SAME,cAAC,IAAD,CAAQc,UAAU,qBAAqBC,KAAK,UAAUC,QAAM,EAA5D,kBAKJF,UAAU,YA7BZ,SAgCE,qBAAKA,UAAU,YAAf,SACE,cAAC,IAAD,CAAKG,MAAOjB,EAAKM,UAAY,OAAS,MAAOQ,UAAU,WAAvD,SACGd,EAAKK,WAJLL,EAAKkB,KCVDC,EAtBC,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,MAAOnB,EAAkC,EAAlCA,cAAeC,EAAmB,EAAnBA,aACvC,OACE,mCACE,cAAC,IAAD,CACEmB,OAAQ,CAAEC,UAAW,oEACrBC,WAAYH,EACZI,WAAY,SAACxB,GAAD,OACV,cAACyB,EAAD,CACEzB,KAAMA,EACNE,aAAcA,EACdD,cAAeA,KAGnByB,WAAY,CACVC,SAAU,SACVC,SAAU,S,2BCyBLC,EAxCE,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAAmB,EACtBC,IAAKC,UAAbC,EAD8B,oBAarC,OACE,cAAC,IAAD,CACEA,KAAMA,EACNC,SAba,WACfJ,EAAa,CACXzB,MAAO4B,EAAKE,cAAc,SAC1B7B,WAAW,IAEb8B,QAAQC,IAAIJ,EAAKK,eAAe,UAEhCL,EAAKM,eAOHC,OAAO,aACP1B,UAAU,YAJZ,SAME,eAAC,IAAD,CAAK2B,OAAQ,GAAb,UACE,cAAC,IAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAzC,SACE,cAAC,IAAK3C,KAAN,CACE4C,KAAM,QACNC,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,oHAFrC,SAIE,cAAC,IAAD,CAAOC,YAAY,sGAGvB,cAAC,IAAD,CAAKT,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAvC,SACE,eAAC,IAAD,CAAQ/B,KAAK,UAAUqC,SAAS,SAASC,OAAK,EAA9C,UACE,cAACC,EAAA,EAAD,IADF,wDClCJC,EAAU,qDAEHC,EAAY,WACvB,OAAOC,MAAMF,GAASG,MAAK,SAACC,GAAD,OAASA,EAAIC,WCUlCC,EAAYC,IAAZD,QACAE,EAAYC,IAAZD,QAyFOE,EAvFE,WAAO,IAAD,EACeC,oBAAS,GADxB,mBACdC,EADc,KACFC,EADE,OAEKF,mBAAS,IAFd,mBAEd9C,EAFc,KAEPiD,EAFO,OAGiBH,mBAAS,IAH1B,mBAGdI,EAHc,KAGDC,EAHC,OAIuBL,mBAAS,IAJhC,mBAIdM,EAJc,KAIEC,EAJF,KAYfC,EAAmB,SAAC1E,GDOD,IAACkB,KCNZlB,EAAKkB,GDOZuC,MAAM,GAAD,OAAIF,EAAJ,YAAerC,GAAM,CAC/ByD,OAAQ,WACPjB,MAAK,SAACC,GAAD,OAASA,EAAIC,WCTEF,KAAKkB,KAC1B1B,IAAQ2B,KAAK,wEAGTC,EAAoB,SAAC9E,GACzBA,EAAKM,WAAaN,EAAKM,UDbD,SAACN,GACzB,OAAOyD,MAAM,GAAD,OAAIF,EAAJ,YAAevD,EAAKkB,IAAM,CACpCyD,OAAQ,MACRI,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBhE,GAAIlB,EAAKkB,GACTb,MAAOL,EAAKK,MACZC,UAAWN,EAAKM,cAEjBoD,MAAK,SAACC,GAAD,OAASA,EAAIC,UCGnBuB,CAAWnF,GAAM0D,KAAKkB,KACtB1B,IAAQkC,KAAK,2FAaTR,EAAYS,sBAAW,sBAAC,4BAAAC,EAAA,6DAC5BlB,GAAc,GADc,SAEXZ,IAFW,OAExB+B,EAFwB,OAI5BlB,EAASkB,GACThB,EAAegB,EAAKC,QAAO,SAACxF,GAAD,OAA6B,IAAnBA,EAAKM,cAC1CmE,EAAkBc,EAAKC,QAAO,SAACxF,GAAD,OAA6B,IAAnBA,EAAKM,cAC7C8D,GAAc,GACdhC,QAAQC,IAAI,gBAAiB8B,GARD,2CAS3B,CAACA,IAMJ,OAJAsB,qBAAU,WApBRjC,IACGE,MAAK,SAACE,GACLS,EAAST,GACTW,EAAeX,EAAK4B,QAAO,SAACxF,GAAD,OAA6B,IAAnBA,EAAKM,cAC1CmE,EAAkBb,EAAK4B,QAAO,SAACxF,GAAD,OAA6B,IAAnBA,EAAKM,iBAE9CoD,KAAKtB,QAAQC,IAAI,4FAgBnB,CAACuC,IAGF,cAAC,IAAD,CAAQ9D,UAAU,SAAlB,SACE,cAACiD,EAAD,CAAS2B,MAAO,CAAEC,QAAS,UAA3B,SACE,qBAAK7E,UAAU,WAAf,SACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAK8E,KAAM,GAAIC,OAAQ,EAAvB,UACE,yFACA,cAAC,EAAD,CAAU/D,aAjDG,SAAC9B,GACxBoC,QAAQC,IAAI,iBAAkBrC,GDZR,SAACA,GACzB,OAAOyD,MAAMF,EAAS,CACpBoB,OAAQ,OACRI,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAE7E,MAAOL,EAAKK,MAAOC,UAAWN,EAAKM,cACzDoD,MAAK,SAACC,GAAD,OAASA,EAAIC,UCMnBkC,CAAW9F,GAAM0D,KAAKkB,KACtB1B,IAAQ6C,QAAQ,uFA+CN,uBACA,eAAC,IAAD,CAAMC,iBAAiB,MAAvB,UACE,cAACnC,EAAD,CAASoC,IAAI,qBAAb,SACE,cAAC,EAAD,CACE7E,MAAOA,EACPlB,aAAc4E,EACd7E,cAAeyE,KAJI,OAOvB,cAACb,EAAD,CAASoC,IAAI,mDAAb,SACE,cAAC,EAAD,CACE7E,MAAOkD,EACPpE,aAAc4E,EACd7E,cAAeyE,KAJS,UAO5B,cAACb,EAAD,CAASoC,IAAI,qEAAb,SACE,cAAC,EAAD,CACE7E,MAAOoD,EACPtE,aAAc4E,EACd7E,cAAeyE,KAJY,2BC5EhCwB,MARf,WACE,OACE,qBAAKpF,UAAU,MAAf,SACE,cAAC,EAAD,OCFNqF,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.fca5ab25.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Tooltip, Tag, List, Button, Popconfirm, Switch } from 'antd';\nimport { CloseOutlined, CheckOutlined } from '@ant-design/icons';\n\nconst Todo = ({ todo, onTodoRemoval, onTodoToggle }) => {\n  return (\n    <List.Item\n      actions={[\n        <Tooltip\n          title={\n            todo.completed\n              ? 'Пометить как незавершенное'\n              : 'Пометить как завершенное'\n          }\n        >\n          <Switch\n            checkedChildren={<CheckOutlined />}\n            unCheckedChildren={<CloseOutlined />}\n            onChange={() => {\n              onTodoToggle(todo);\n            }}\n            defaultChecked={todo.completed}\n          />\n        </Tooltip>,\n        <Popconfirm\n          title={'Вы точно хотите удалить?'}\n          onConfirm={() => {\n            onTodoRemoval(todo);\n          }}\n        >\n          <Button className=\"remove-todo-button\" type=\"primary\" danger>\n            X\n          </Button>\n        </Popconfirm>,\n      ]}\n      className=\"list-item\"\n      key={todo.id}\n    >\n      <div className=\"todo-item\">\n        <Tag color={todo.completed ? 'cyan' : 'red'} className=\"todo-tag\">\n          {todo.title}\n        </Tag>\n      </div>\n    </List.Item>\n  );\n};\n\nexport default Todo;\n","import React, { useEffect } from 'react';\nimport { Tabs, Layout, Row, Column, List } from 'antd';\nimport TodoItem from './TodoItem';\n\nconst Todotab = ({ todos, onTodoRemoval, onTodoToggle }) => {\n  return (\n    <>\n      <List\n        locale={{ emptyText: 'Здесь пусто :(' }}\n        dataSource={todos}\n        renderItem={(todo) => (\n          <TodoItem\n            todo={todo}\n            onTodoToggle={onTodoToggle}\n            onTodoRemoval={onTodoRemoval}\n          />\n        )}\n        pagination={{\n          position: 'bottom',\n          pageSize: 10,\n        }}\n      />\n    </>\n  );\n};\n\nexport default Todotab;\n","import React from 'react';\nimport { Form, Row, Col, Button, Input } from 'antd';\nimport { PlusCircleFilled } from '@ant-design/icons';\n\nconst TodoForm = ({ onFormSubmit }) => {\n  const [form] = Form.useForm();\n\n  const onFinish = () => {\n    onFormSubmit({\n      title: form.getFieldValue('title'),\n      completed: false,\n    });\n    console.log(form.getFieldsValue('title'));\n\n    form.resetFields();\n  };\n\n  return (\n    <Form\n      form={form}\n      onFinish={onFinish}\n      layout=\"horizontal\"\n      className=\"todo-form\"\n    >\n      <Row gutter={20}>\n        <Col xs={24} sm={24} md={17} lg={19} xl={20}>\n          <Form.Item\n            name={'title'}\n            rules={[{ required: true, message: 'Это поле обязательно!' }]}\n          >\n            <Input placeholder=\"Что нужно сделать?\" />\n          </Form.Item>\n        </Col>\n        <Col xs={24} sm={24} md={7} lg={5} xl={4}>\n          <Button type=\"primary\" htmlType=\"submit\" block>\n            <PlusCircleFilled />\n            Создать\n          </Button>\n        </Col>\n      </Row>\n    </Form>\n  );\n};\n\nexport default TodoForm;\n","const baseUrl = 'https://whispering-beach-69994.herokuapp.com/todos';\n\nexport const loadTodos = () => {\n  return fetch(baseUrl).then((res) => res.json());\n};\n\nexport const getTodo = (id) => {\n  console.log(`${baseUrl}/${id}`);\n  return fetch(`${baseUrl}/${id}`).then((res) => res.json());\n};\n\nexport const createTodo = (todo) => {\n  return fetch(baseUrl, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ title: todo.title, completed: todo.completed }),\n  }).then((res) => res.json());\n};\n\nexport const updateTodo = (todo) => {\n  return fetch(`${baseUrl}/${todo.id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      id: todo.id,\n      title: todo.title,\n      completed: todo.completed,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const deleteTodos = (id) => {\n  return fetch(`${baseUrl}/${id}`, {\n    method: 'DELETE',\n  }).then((res) => res.json());\n};\n","import React, { useEffect, useState, useCallback } from 'react';\nimport { Tabs, Layout, Row, Col, Input, message } from 'antd';\nimport './TodoList.css';\nimport TodoTab from './TodoTab';\nimport TodoForm from './TodoForm';\nimport {\n  createTodo,\n  deleteTodos,\n  loadTodos,\n  updateTodo,\n} from '../services/todoService';\nimport Todotab from './TodoTab';\n\nconst { TabPane } = Tabs;\nconst { Content } = Layout;\n\nconst TodoList = () => {\n  const [refreshing, setRefreshing] = useState(false);\n  const [todos, setTodos] = useState([]);\n  const [activeTodos, setActiveTodos] = useState([]);\n  const [completedTodos, setCompletedTodos] = useState([]);\n\n  const handleFormSubmit = (todo) => {\n    console.log('Todo to create', todo);\n    createTodo(todo).then(onRefresh());\n    message.success('Дело добавлено!');\n  };\n\n  const handleRemoveTodo = (todo) => {\n    deleteTodos(todo.id).then(onRefresh());\n    message.warn('Дело удалено');\n  };\n\n  const handeToggleStatus = (todo) => {\n    todo.completed = !todo.completed;\n    updateTodo(todo).then(onRefresh());\n    message.info('Статус обновлен!');\n  };\n\n  const refresh = () => {\n    loadTodos()\n      .then((json) => {\n        setTodos(json);\n        setActiveTodos(json.filter((todo) => todo.completed === false));\n        setCompletedTodos(json.filter((todo) => todo.completed === true));\n      })\n      .then(console.log('Список загружен'));\n  };\n\n  const onRefresh = useCallback(async () => {\n    setRefreshing(true);\n    let data = await loadTodos();\n\n    setTodos(data);\n    setActiveTodos(data.filter((todo) => todo.completed === false));\n    setCompletedTodos(data.filter((todo) => todo.completed === true));\n    setRefreshing(false);\n    console.log('Refresh state', refreshing);\n  }, [refreshing]);\n\n  useEffect(() => {\n    refresh();\n  }, [onRefresh]);\n\n  return (\n    <Layout className=\"layout\">\n      <Content style={{ padding: '0 50px' }}>\n        <div className=\"todolist\">\n          <Row>\n            <Col span={14} offset={5}>\n              <h1>Список дел</h1>\n              <TodoForm onFormSubmit={handleFormSubmit} />\n              <br />\n              <Tabs defaultActiveKey=\"all\">\n                <TabPane tab=\"Все\" key=\"all\">\n                  <Todotab\n                    todos={todos}\n                    onTodoToggle={handeToggleStatus}\n                    onTodoRemoval={handleRemoveTodo}\n                  />\n                </TabPane>\n                <TabPane tab=\"Активные\" key=\"active\">\n                  <Todotab\n                    todos={activeTodos}\n                    onTodoToggle={handeToggleStatus}\n                    onTodoRemoval={handleRemoveTodo}\n                  />\n                </TabPane>\n                <TabPane tab=\"Завершённые\" key=\"complete\">\n                  <Todotab\n                    todos={completedTodos}\n                    onTodoToggle={handeToggleStatus}\n                    onTodoRemoval={handleRemoveTodo}\n                  />\n                </TabPane>\n              </Tabs>\n            </Col>\n          </Row>\n        </div>\n      </Content>\n    </Layout>\n  );\n};\nexport default TodoList;\n","import './App.css';\nimport { Button } from 'antd';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}